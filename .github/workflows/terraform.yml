name: "Terraform"

on:
  push:
    branches:
      - main
      - feature/*

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - id: checkout
        uses: actions/checkout@v3

      - id: terraform-setup
        uses: hashicorp/setup-terraform@v2

      - id: init
        run: terraform init -no-color

      - id: plan
        run: terraform plan -no-color

      - id: apply
        run: terraform apply -no-color -auto-approve -input=false

      - id: output
        run: terraform output -no-color -json

      - id: print-output
        run: echo "${{ steps.output.outputs.stdout }}"

      - id: setup-yq
        uses: mikefarah/yq@v4.33.2

      # TODO: Turn controllerIps into a list like nodeIps
      # TODO: Add node names to ansible config
      - id: host-template
        run: |
          cp ansible/hosts-template.ini ansible/hosts.ini; \
          nodeIps = echo ${{ steps.output.outputs.stdout }} | yq e '.node_ip_addr.value[0][] as $ips | $ips'; \
          controllerIps = echo ${{ steps.output.outputs.stdout }} | yq e '.controller_ip_addr.value as $ip | $ip'; \
          echo $nodeIps \
          echo $controllerIps \
          

      - id: terraform-destroy
        if: ${{ always() }}
        run: terraform destroy -no-color -auto-approve -input=false
